// Mocks generated by Mockito 5.0.14 from annotations
// in iothub/test/pages/home_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:iothub/src/data_source/auth_repository.dart' as _i9;
import 'package:iothub/src/domain/entities/device.dart' as _i7;
import 'package:iothub/src/domain/entities/iothub.dart' as _i6;
import 'package:iothub/src/domain/entities/measurement.dart' as _i8;
import 'package:iothub/src/domain/entities/user.dart' as _i3;
import 'package:iothub/src/service/iothub_service.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:states_rebuilder/states_rebuilder.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeIAuth_0<T, P> extends _i1.Fake implements _i2.IAuth<T, P> {}

class _FakeUser_1 extends _i1.Fake implements _i3.User {}

/// A class which mocks [IOTHubService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOTHubService extends _i1.Mock implements _i4.IOTHubService {
  MockIOTHubService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.IOTHub>> loadAllIOTHubs() =>
      (super.noSuchMethod(Invocation.method(#loadAllIOTHubs, []),
              returnValue: Future<List<_i6.IOTHub>>.value(<_i6.IOTHub>[]))
          as _i5.Future<List<_i6.IOTHub>>);
  @override
  _i5.Future<List<_i7.Device>> loadAllDevices(String? selectedIOTHubID) =>
      (super.noSuchMethod(
              Invocation.method(#loadAllDevices, [selectedIOTHubID]),
              returnValue: Future<List<_i7.Device>>.value(<_i7.Device>[]))
          as _i5.Future<List<_i7.Device>>);
  @override
  _i5.Future<List<_i8.Measurement<dynamic>>> loadLastMeasurement(
          String? iothubId, _i7.Device? device) =>
      (super.noSuchMethod(
              Invocation.method(#loadLastMeasurement, [iothubId, device]),
              returnValue: Future<List<_i8.Measurement<dynamic>>>.value(
                  <_i8.Measurement<dynamic>>[]))
          as _i5.Future<List<_i8.Measurement<dynamic>>>);
  @override
  _i5.Stream<List<_i8.Measurement<dynamic>>> deviceAllMeasurementStream(
          String? iothubDocumentId, _i7.Device? device) =>
      (super.noSuchMethod(
              Invocation.method(
                  #deviceAllMeasurementStream, [iothubDocumentId, device]),
              returnValue: Stream<List<_i8.Measurement<dynamic>>>.empty())
          as _i5.Stream<List<_i8.Measurement<dynamic>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FirebaseAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthRepository extends _i1.Mock
    implements _i9.FirebaseAuthRepository {
  MockFirebaseAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.IAuth<_i3.User, _i3.UserParam>> init() =>
      (super.noSuchMethod(Invocation.method(#init, []),
              returnValue: Future<_i2.IAuth<_i3.User, _i3.UserParam>>.value(
                  _FakeIAuth_0<_i3.User, _i3.UserParam>()))
          as _i5.Future<_i2.IAuth<_i3.User, _i3.UserParam>>);
  @override
  _i5.Future<_i3.User> signUp(_i3.UserParam? param) =>
      (super.noSuchMethod(Invocation.method(#signUp, [param]),
              returnValue: Future<_i3.User>.value(_FakeUser_1()))
          as _i5.Future<_i3.User>);
  @override
  _i5.Future<_i3.User> signIn(_i3.UserParam? param) =>
      (super.noSuchMethod(Invocation.method(#signIn, [param]),
              returnValue: Future<_i3.User>.value(_FakeUser_1()))
          as _i5.Future<_i3.User>);
  @override
  _i5.Future<void> signOut(_i3.UserParam? param) =>
      (super.noSuchMethod(Invocation.method(#signOut, [param]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<_i3.User> currentUser() =>
      (super.noSuchMethod(Invocation.method(#currentUser, []),
              returnValue: Future<_i3.User>.value(_FakeUser_1()))
          as _i5.Future<_i3.User>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
